---
import MainGridLayout from "../layouts/MainGridLayout.astro";
import { links } from "../config/friend";
import { momentsData } from "../config/moment";
import { postData } from "../config/posts";
import { Icon } from "astro-icon/components";
import { siteConfig } from "../config";

const dashboardTopItems = [
  {
    title: "文章",
    icon: "material-symbols:folder-outline-rounded",
    content: postData.length,
    key: "posts",
  },
  {
    title: "动态",
    icon: "material-symbols:calendar-today-outline",
    content: momentsData.length,
    key: "moments",
  },
  {
    title: "友链",
    icon: "material-symbols:link-rounded",
    content: links.length,
    key: "friends",
  },
];

const sortedPosts = [...postData].sort(
  (a, b) => new Date(b.published).getTime() - new Date(a.published).getTime()
);
const sortedMoments = [...momentsData].sort(
  (a, b) =>
    new Date(`${b.date}T${b.time}`).getTime() -
    new Date(`${a.date}T${a.time}`).getTime()
);
const sortedLinks = [...links].sort((a, b) =>
  a.fileName.localeCompare(b.fileName)
);

function getTimeString() {
  const now = new Date();
  const yyyy = now.getFullYear();
  const mm = String(now.getMonth() + 1).padStart(2, "0");
  const dd = String(now.getDate()).padStart(2, "0");
  const hh = String(now.getHours()).padStart(2, "0");
  const min = String(now.getMinutes()).padStart(2, "0");
  const ss = String(now.getSeconds()).padStart(2, "0");
  return `${yyyy}${mm}${dd}_${hh}${min}${ss}`;
}

function getDate() {
  const today = new Date();
  const year = today.getFullYear();
  const month = String(today.getMonth() + 1).padStart(2, "0");
  const day = String(today.getDate()).padStart(2, "0");
  return `${year}-${month}-${day}`;
}

const postFileTemplate = `---
title:
published: ${getDate()}
description: 
tags: []
category: 
origin: ""
image: ""
pinned: false
draft: false
---`;

const friendFileTemplate = `{
  "title": "",
  "link": "",
  "desc": "",
  "img": ""
}`;

const momentFileTemplate = `{
  "date": "${getDate()}",
  "time": "${String(new Date().getHours()).padStart(2, "0")}:${String(new Date().getMinutes()).padStart(2, "0")}",
  "content": ""
}`;
---

<MainGridLayout title="仪表盘" description="网页信息一览">
  <!-- Top statistics buttons -->
  <div
    id="dashboard-tabs"
    class="flex flex-col sm:flex-row w-full overflow-hidden relative card-base px-9 py-6 mb-4"
  >
    {
      dashboardTopItems.map((item, index) => (
        <>
          <button
            data-tab={item.key}
            class={`flex items-center w-full sm:flex-1 mb-0 cursor-pointer opacity-60`}
          >
            <Icon
              name={item.icon}
              class="w-6 h-6 text-neutral-900 dark:text-neutral-100"
            />
            <div class="text-xl text-neutral-900 dark:text-neutral-100 ml-3 font-semibold">
              {item.title}
            </div>
            <div class="text-xl text-neutral-400 dark:text-neutral-600 ml-auto">
              {item.content}
            </div>
          </button>
          {index !== dashboardTopItems.length - 1 && (
            <div class="sm:border-l-[1px] border-t-[1px] border-dashed border-black/10 dark:border-white/[0.15] mx-0 my-4 sm:mx-6 sm:my-0" />
          )}
        </>
      ))
    }
  </div>

  <!-- Articles section -->
  <div
    id="tab-posts"
    class="tab-section card-base z-10 px-9 py-6 relative w-full flex flex-col gap-3.5 mb-4"
  >
    <div class="flex items-center">
      <span class="text-neutral-900 dark:text-neutral-100 font-semibold"
        >文章</span
      >
      <a
        class="p-1 rounded-md ml-auto transition-colors"
        href={`https://github.com/${siteConfig.editPost.repo}/new/main/src/content/posts?filename=${getTimeString()}.md&value=${encodeURIComponent(postFileTemplate)}`}
      >
        <Icon
          name="material-symbols:new-window-rounded"
          class="text-blue-500 dark:text-blue-400 hover:text-blue-600 dark:hover:text-blue-300 transition-all"
        />
      </a>
    </div>
    <div
      class="transition border-t-[1px] border-dashed border-black/10 dark:border-white/[0.15]"
    >
    </div>

    {/* Loop through posts */}
    {
      sortedPosts.map((post) => (
        <div class="flex items-center">
          <span class="text-neutral-700 dark:text-neutral-300 font-semibold overflow-hidden whitespace-nowrap text-ellipsis pr-10">
            {post.title}
          </span>
          <a
            class="p-1 rounded-md ml-auto transition-colors"
            href={`https://github.com/${siteConfig.editPost.repo}/edit/main/src/content${post.url}.md`}
          >
            <Icon
              name="fluent:edit-12-regular"
              class="text-gray-500 dark:text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-all"
            />
          </a>
          <a
            class="p-1 rounded-md ml-2 transition-colors"
            href={`https://github.com/${siteConfig.editPost.repo}/delete/main/src/content${post.url}.md`}
          >
            <Icon
              name="fluent:delete-12-regular"
              class="text-red-500 dark:text-red-400 hover:text-red-600 dark:hover:text-red-300 transition-all"
            />
          </a>
        </div>
      ))
    }
  </div>

  <!-- Friends section -->
  <div
    id="tab-friends"
    class="tab-section card-base z-10 px-9 py-6 relative w-full flex flex-col gap-3.5 mb-4"
    style="display:none;"
  >
    <div class="flex items-center">
      <span class="text-neutral-900 dark:text-neutral-100 font-semibold"
        >友链</span
      >
      <a
        class="p-1 rounded-md ml-auto transition-colors"
        href={`https://github.com/${siteConfig.editPost.repo}/new/main/src/config/friends?filename=${getTimeString()}.json&value=${encodeURIComponent(friendFileTemplate)}`}
      >
        <Icon
          name="material-symbols:new-window-rounded"
          class="text-blue-500 dark:text-blue-400 hover:text-blue-600 dark:hover:text-blue-300 transition-all"
        />
      </a>
    </div>
    <div
      class="transition border-t-[1px] border-dashed border-black/10 dark:border-white/[0.15]"
    >
    </div>

    {/* Loop through friends */}
    {
      sortedLinks.map((link) => (
        <div class="flex items-center">
          <span class="text-neutral-700 dark:text-neutral-300 font-semibold overflow-hidden whitespace-nowrap text-ellipsis">
            {link.title}
          </span>
          <span class="ml-3 text-neutral-400 dark:text-neutral-500 hidden md:block overflow-hidden whitespace-nowrap text-ellipsis pr-10">
            {link.desc}
          </span>
          <a
            class="p-1 rounded-md ml-auto transition-colors"
            href={`https://github.com/${siteConfig.editPost.repo}/edit/main/src/config/friends/${link.fileName}`}
          >
            <Icon
              name="fluent:edit-12-regular"
              class="text-gray-500 dark:text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-all"
            />
          </a>
          <a
            class="p-1 rounded-md ml-2 transition-colors"
            href={`https://github.com/${siteConfig.editPost.repo}/delete/main/src/config/friends/${link.fileName}`}
          >
            <Icon
              name="fluent:delete-12-regular"
              class="text-red-500 dark:text-red-400 hover:text-red-600 dark:hover:text-red-300 transition-all"
            />
          </a>
        </div>
      ))
    }
  </div>

  <!-- Moments section -->
  <div
    id="tab-moments"
    class="tab-section card-base z-10 px-9 py-6 relative w-full flex flex-col gap-3.5"
    style="display:none;"
  >
    <div class="flex items-center">
      <span class="text-neutral-900 dark:text-neutral-100 font-semibold"
        >动态</span
      >
      <a
        class="p-1 rounded-md ml-auto transition-colors"
        href={`https://github.com/${siteConfig.editPost.repo}/new/main/src/config/moments?filename=${getTimeString()}.json&value=${encodeURIComponent(momentFileTemplate)}`}
      >
        <Icon
          name="material-symbols:new-window-rounded"
          class="text-blue-500 dark:text-blue-400 hover:text-blue-600 dark:hover:text-blue-300 transition-all"
        />
      </a>
    </div>
    <div
      class="transition border-t-[1px] border-dashed border-black/10 dark:border-white/[0.15]"
    >
    </div>

    {/* Loop through moments */}
    {
      sortedMoments.map((m) => (
        <div class="flex items-center">
          <span class="text-neutral-700 dark:text-neutral-300 font-semibold overflow-hidden whitespace-nowrap text-ellipsis pr-10">
            {m.content}
          </span>
          <a
            class="p-1 rounded-md ml-auto transition-colors"
            href={`https://github.com/${siteConfig.editPost.repo}/edit/main/src/config/moments/${m.fileName}`}
          >
            <Icon
              name="fluent:edit-12-regular"
              class="text-gray-500 dark:text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-all"
            />
          </a>
          <a
            class="p-1 rounded-md ml-2 transition-colors"
            href={`https://github.com/${siteConfig.editPost.repo}/delete/main/src/config/moments/${m.fileName}`}
          >
            <Icon
              name="fluent:delete-12-regular"
              class="text-red-500 dark:text-red-400 hover:text-red-600 dark:hover:text-red-300 transition-all"
            />
          </a>
        </div>
      ))
    }
  </div>

  <!-- Tab switch script -->
  <script type="module">
    const buttons = document.querySelectorAll("#dashboard-tabs button");
    const sections = document.querySelectorAll(".tab-section");

    // Read last active tab from localStorage, default to "posts"
    let activeTab = localStorage.getItem("dashboardActiveTab") || "posts";

    // Show the correct section and button opacity
    sections.forEach(
      (s) => (s.style.display = s.id === "tab-" + activeTab ? "flex" : "none")
    );
    buttons.forEach(
      (b) => (b.style.opacity = b.dataset.tab === activeTab ? "1" : "0.6")
    );

    // Add click events
    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        activeTab = btn.dataset.tab;

        // Save the current tab to localStorage
        localStorage.setItem("dashboardActiveTab", activeTab);

        sections.forEach(
          (s) =>
            (s.style.display = s.id === "tab-" + activeTab ? "flex" : "none")
        );
        buttons.forEach(
          (b) => (b.style.opacity = b.dataset.tab === activeTab ? "1" : "0.6")
        );
      });
    });
  </script>
</MainGridLayout>
